mixin predicate 
  | #{knowledgeGraph.predicate}

mixin object 
  | is
  | #{knowledgeGraph.object}

<<<<<<< HEAD
=======
mixin intro
  synz
    syn
      | Welcome to the server, these are your knowedge graph verbalisation: 
    syn
      | Welcome! Here is verbalisation for you: 
    syn
      | Your knowedge graph verbalisation are: 

>>>>>>> 59b8318 (improveOfVerbalisation)
mixin name
  | The subject is
  | #{knowledgeGraph.subject}

mixin knowledgeGraph_refexpr(obj, params)
  synz {mode:'sequence'}
    syn
      | This subject's 
    syn
      | The subject's 

<<<<<<< HEAD
=======
p #[+intro]

mixin printName
  | #[+name]

>>>>>>> 59b8318 (improveOfVerbalisation)
mixin printKnowedgeGraph
  | #[+value(knowledgeGraph_refexpr)]
  | #[+predicate]
  | #[+object] .


- let knowledgeGraph = knowledgeGraphs[0];
p #[+name] .

each knowledgeGraphELT in knowledgeGraphs
  - knowledgeGraph = knowledgeGraphELT;  

  p 
    -
    | #[+printKnowedgeGraph]
